package abstractEx;

public class Explain {

	
//	1_ 우선은 해당 데이터 들을 몇 개의 클래스로 만들어야 할지 결정합니다.
//	도표가 하나인 경우라면 클래스를 생각하시되 상속을 고려하면 꽤
//	높은 확률로 맞아 들어갑니다. 
	
//	2_ 상속 구조가 가능한지를 결정합니다.
//	여러 종류의 객체를 만들어야 하고 앞으로도 얼마든지 추가될 만한 클래스를 만들 것이라고 판단되면 여
//	러 객체를 구성해 보고 공통된 데이터나 동작을 모아서 상속을 고려하는 것이 정석입니다.
	
//	3_ 일반 상속이 나은가? 추상 클래스를 쓰는 상속이 나은가 결정해야 합니다.
//	1. 오버라이드가 필요 없을 때만 일반 상속을 쓰세요. 
//	2. 부모 클래스도 객체화될 때만 일반 상속을 씁니다. ->  부모 클래스도 객체로 갈 것이 확실하다면 그때는 일반 상속
	
//	4_ 부모 클래스에 있어야 할 속성과 메소드를 조절합니다.
	
//	5_ 데이터를 활용하는 계산은 객체가 알아서 하도록 합니다

}
